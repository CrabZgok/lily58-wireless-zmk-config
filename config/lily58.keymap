/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4     &kp N5                               &kp N6         &kp N7         &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp TAB    &kp Q   &kp W   &kp E   &kp R      &kp T                                &kp Y          &kp U          &kp I      &kp O    &kp P     &kp BACKSLASH
&kp LCTRL  &kp A   &kp S   &kp D   &kp F      &kp G                                &kp H          &kp J          &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V      &kp B         &kp LBKT     &kp RBKT  &kp N          &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &mo 1   &kp LCTRL  &kp LEFT_ALT  &kp SPACE    &kp RET   &kp RIGHT_ALT  &kp RIGHT_GUI  &mo 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Menu_Mouse_layer {
            bindings = <
&out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4                               &trans          &trans          &trans        &trans           &trans    &trans
&kp F1        &kp F2        &kp F3          &kp F4          &kp F5        &kp F6                                     &kp F7          &kp F8          &kp F9        &kp F10          &kp F11   &kp F12
&trans        &trans        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW                            &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &mkp MB5  &trans
&trans        &trans        &trans          &trans          &trans        &trans           &bt BT_PRV    &bt BT_NXT  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &mkp MB4  &trans
                                            &trans          &trans        &trans           &trans        &mkp LCLK   &mkp RCLK       &trans          &trans
            >;
        };

        Special_Character_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                          &trans          &trans          &trans        &trans           &trans   &trans
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6                          &kp F7          &kp F8          &kp F8        &kp F10          &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans                          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp MINUS    &kp EQUAL  &trans          &trans          &trans        &trans           &trans   &trans
                        &trans  &trans  &trans  &trans       &trans     &trans          &trans          &trans
            >;
        };
    };
};
